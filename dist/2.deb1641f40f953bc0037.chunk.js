webpackJsonp([2],{661:function(n,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=o(58),t=o(96),r=o(8),s=o(52),a=o(239),l=o(942);e.routes=[{path:"",component:l.LoginComponent,pathMatch:"full"}];var d=function(){function LoginModule(){}return LoginModule}();d.routes=e.routes,d=__decorate([r.NgModule({declarations:[l.LoginComponent],imports:[i.CommonModule,t.FormsModule,s.RouterModule.forChild(e.routes)],providers:[a.MessageBusService]})],d),e.default=d},680:function(n,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=o(8),t=o(54),r=function(){function AuthService(n){this.http=n}return AuthService.prototype.setIsLoggedIn=function(n,e){n?window.localStorage.setItem("id_token",e):window.localStorage.removeItem("id_token"),this.isLoggedin=n},AuthService.prototype.returnLoginResult=function(n,e){var o=n.json();if(o.success){var i=o.id_token;i&&this.setIsLoggedIn(!0,i)}e(o)},AuthService.prototype.loginfn=function(n){var e=this;this.isLoggedin=!1;var o=new t.Headers,i="username="+n.username+"&password="+n.password+"&isKeepLoggedIn="+n.isKeepLoggedIn;return o.append("Content-Type","application/X-www-form-urlencoded"),new Promise(function(n){e.http.post("/login",i,{headers:o}).subscribe(function(o){e.returnLoginResult(o,n)})})},AuthService.prototype.logoutfn=function(){var n=this;return new Promise(function(e){n.setIsLoggedIn(!1),e(n.isLoggedin)})},AuthService.prototype.registerfn=function(n){var e=this;this.isLoggedin=!1;var o=new t.Headers,i="username="+n.username+"&password="+n.password+"&confirmPassword="+n.confirmPassword+"&isKeepLoggedIn="+n.isKeepLoggedIn+"&firstName="+n.firstName+"&lastName="+n.lastName;return o.append("Content-Type","application/X-www-form-urlencoded"),new Promise(function(n){e.http.post("/register",i,{headers:o}).subscribe(function(o){e.returnLoginResult(o,n)})})},AuthService}();r=__decorate([i.Injectable(),__metadata("design:paramtypes",[t.Http])],r),e.AuthService=r},942:function(n,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=o(8),t=o(52),r=o(96),s=o(680),a=o(239),l=function(){function LoginComponent(n,e,o){this.service=n,this.messageBusService=e,this.router=o,this.formErrors={username:[],password:[]},this.validationMessages={username:{required:"User name is required.",pattern:"User name must be formatted as as an email address.",exists:"Authentication failed, user not found."},password:{required:"Password is required.",match:"Authentication failed, wrong password."}}}return LoginComponent.prototype.ngOnInit=function(){this.user={username:"",firstName:"",lastName:"",password:"",role:"",email:"",phone:"",isKeepLoggedIn:!0}},LoginComponent.prototype.login=function(n,e){var o=this,i=e;n&&this.service.loginfn(e).then(function(n){if(n.success)o.router.navigate(["/app/dashboard"]),o.messageBusService.publishCurrentUser(i);else if(n.success===!1){var e=n.field;o.formErrors[e]=[],o.formErrors[e].push(o.validationMessages[e][n.msgKey])}})},LoginComponent.prototype.ngAfterViewChecked=function(){this.formChanged()},LoginComponent.prototype.formChanged=function(){var n=this;this.currentForm!==this.loginForm&&(this.loginForm=this.currentForm,this.loginForm&&this.loginForm.valueChanges.subscribe(function(e){return n.onValueChanged(e)}))},LoginComponent.prototype.onValueChanged=function(n){if(this.loginForm){var e=this.loginForm.form;for(var o in this.formErrors)if(o){this.formErrors[o]=[];var i=e.get(o);if(i&&i.dirty&&!i.valid){var t=this.validationMessages[o];for(var r in i.errors)r&&this.formErrors[o].push(t[r])}}}},LoginComponent}();__decorate([i.ViewChild("loginForm"),__metadata("design:type",r.NgForm)],l.prototype,"currentForm",void 0),l=__decorate([i.Component({styles:[o(964)],template:o(992),encapsulation:i.ViewEncapsulation.None,host:{"class":"login-page app"},providers:[s.AuthService]}),__metadata("design:paramtypes",[s.AuthService,a.MessageBusService,t.Router])],l),e.LoginComponent=l},964:function(n,e){n.exports="/***********************************/\n/**             LOGIN             **/\n/***********************************/\n.login-page {\n  background-color: #ddd; }\n\n.login-page .page-footer {\n  margin-bottom: 25px;\n  font-size: 13px;\n  color: #818a91;\n  text-align: center; }\n  @media (min-height: 600px) {\n    .login-page .page-footer {\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      right: 0; } }\n\n.widget-login-container {\n  padding-top: 10%; }\n\n.widget-login-logo {\n  margin-top: 15px;\n  margin-bottom: 15px;\n  text-align: center;\n  font-weight: 400; }\n  .widget-login-logo .fa-circle {\n    font-size: 13px;\n    margin: 0 20px; }\n\n.widget-login {\n  padding: 30px; }\n  .widget-login > header h1, .widget-login > header h2, .widget-login > header h3, .widget-login > header h4, .widget-login > header h5, .widget-login > header h6 {\n    font-weight: 400;\n    text-align: center; }\n\n.widget-login-info {\n  font-size: 13px;\n  color: #888;\n  margin-top: 1px;\n  margin-bottom: 0;\n  text-align: center; }\n  .widget-login-info.abc-checkbox {\n    margin-left: -25px; }\n\n.login-form .form-control {\n  font-size: 13px;\n  background-color: #eceeef; }\n  .login-form .form-control:focus {\n    background-color: #ddd; }\n"},992:function(n,e){n.exports='<div class="container">\n    <main id="content" class="widget-login-container" role="main">\n        <div class="row">\n            <div class="col-xl-4 col-md-6 col-xs-10 offset-xl-4 offset-md-3 offset-xs-1">\n                <h5 class="widget-login-logo animated fadeInUp">\n                    <i class="fa fa-circle text-gray"></i>\n                    TF&nbsp;<i class="fa fa-cloud"></i>\n                    <i class="fa fa-circle text-warning"></i>\n                </h5>\n                <section class="widget widget-login animated fadeInUp">\n                    <header>\n                        <h3>Login to Task Force Cloud</h3>\n                    </header>\n                    <div class="widget-body">\n                        <!--<p class="widget-login-info">-->\n                        <!--Use Facebook, Twitter or your email to sign in.-->\n                        <!--</p>-->\n                        <p class="widget-login-info">\n                            Don\'t have an account? <a [routerLink]="[\'/register\']">Sign up now!</a>\n                        </p>\n                        <form class="login-form mt-lg" role="form" #loginForm="ngForm" novalidate>\n                            <div class="form-group">\n                                <input type="email" class="form-control"\n                                       name="username"\n                                       placeholder="Username (E-mail Address)"\n                                       [(ngModel)]="user.username"\n                                       pattern="^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$"\n                                       tabindex="1"\n                                       required>\n                                <ul class="validation-errors-list filled" *ngFor="let err of formErrors.username">\n                                    <li class="validation-type">{{ err }}</li>\n                                </ul>\n                            </div>\n                            <div class="form-group">\n                                <input class="form-control"\n                                       type="password"\n                                       name="password"\n                                       placeholder="Password"\n                                       [(ngModel)]="user.password"\n                                       tabindex="2"\n                                       required>\n                                <ul class="validation-errors-list filled" *ngFor="let err of formErrors.password">\n                                    <li class="validation-type">{{ err }}</li>\n                                </ul>\n                            </div>\n                            <div class="clearfix">\n                                <div class="btn-toolbar pull-xs-right m-t-1">\n                                    <button type="button" class="btn btn-secondary btn-sm" [routerLink]="[\'/register\']">\n                                        Sign up now!\n                                    </button>\n                                    <button type="submit" class="btn btn-inverse btn-sm"\n                                            (click)="login(loginForm.valid, loginForm.value)"\n                                            [disabled]="!loginForm.valid"\n                                            tabindex="4">Login\n                                    </button>\n                                </div>\n                            </div>\n                            <div class="row m-t-1">\n                                <div class="col-md-6 push-md-6">\n                                    <div class="clearfix">\n                                        <div class="abc-checkbox widget-login-info pull-xs-right">\n                                            <input type="checkbox" id="isKeepLoggedIn" name="isKeepLoggedIn"\n                                                   [(ngModel)]="user.isKeepLoggedIn"\n                                                   tabindex="3">\n                                            <label for="isKeepLoggedIn">Keep me signed in </label>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class="col-md-6 pull-md-6">\n                                    <a class="mr-n-lg" href="#">Trouble with account?</a>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </section>\n            </div>\n        </div>\n    </main>\n    <footer class="page-footer">\n        2016 &copy; Task Force Cloud\n    </footer>\n</div>\n'}});