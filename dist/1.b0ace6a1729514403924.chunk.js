webpackJsonp([1],{689:function(e,r,n){"use strict";var t=n(73),o=n(157),i=n(0),s=n(86),a=n(760);r.routes=[{path:"",component:a.Register,pathMatch:"full"}];var d=function(){function RegisterModule(){}return RegisterModule.routes=r.routes,RegisterModule=__decorate([i.NgModule({declarations:[a.Register],imports:[t.CommonModule,o.FormsModule,s.RouterModule.forChild(r.routes)]}),__metadata("design:paramtypes",[])],RegisterModule)}();Object.defineProperty(r,"__esModule",{value:!0}),r.default=d},692:function(e,r,n){"use strict";var t=n(0),o=n(108),i=function(){function AuthService(e){this.http=e}return AuthService.prototype.setIsLoggedIn=function(e,r){e?window.localStorage.setItem("id_token",r):window.localStorage.removeItem("id_token"),this.isLoggedin=e},AuthService.prototype.loginfn=function(e){var r=this;this.isLoggedin=!1;var n=new o.Headers,t="username="+e.username+"&password="+e.password+"&isKeepLoggedIn="+e.isKeepLoggedIn;return n.append("Content-Type","application/X-www-form-urlencoded"),new Promise(function(e){r.http.post("/login",t,{headers:n}).subscribe(function(n){var t=n.json().id_token;t&&r.setIsLoggedIn(!0,t),e(r.isLoggedin)})})},AuthService.prototype.logoutfn=function(){var e=this;return new Promise(function(r){e.setIsLoggedIn(!1),r(e.isLoggedin)})},AuthService.prototype.registerfn=function(e){var r=this;this.isLoggedin=!1;var n=new o.Headers,t="username="+e.username+"&password="+e.password+"&confirmPassword="+e.confirmPassword+"&isKeepLoggedIn="+e.isKeepLoggedIn;return n.append("Content-Type","application/X-www-form-urlencoded"),new Promise(function(e){r.http.post("/register",t,{headers:n}).subscribe(function(n){var t=n.json().id_token;t&&r.setIsLoggedIn(!0,t),e(r.isLoggedin)})})},AuthService=__decorate([t.Injectable(),__metadata("design:paramtypes",["function"==typeof(e="undefined"!=typeof o.Http&&o.Http)&&e||Object])],AuthService);var e}();r.AuthService=i},760:function(e,r,n){"use strict";var t=n(0),o=n(86),i=n(157),s=n(692),a=function(){function Register(e,r){this.service=e,this.router=r,this.formErrors={username:[],password:[],confirmPassword:[]},this.validationMessages={username:{required:"User name is required.",email:"User name must be formatted as as an email address."},password:{required:"Password is required."},confirmPassword:{required:"Password confirmation is required."}}}return Register.prototype.ngOnInit=function(){this.user={username:"",password:"",confirmPassword:"",isKeepLoggedIn:!1}},Register.prototype.register=function(e,r){var n=this;e?this.service.registerfn(r).then(function(e){e?n.router.navigate(["/app/dashboard"]):console.log(e)}):this.onValueChanged(null,!0)},Register.prototype.ngAfterViewChecked=function(){this.formChanged()},Register.prototype.formChanged=function(){var e=this;this.currentForm!==this.registrationForm&&(this.registrationForm=this.currentForm,this.registrationForm&&this.registrationForm.valueChanges.subscribe(function(r){return e.onValueChanged(r)}))},Register.prototype.onValueChanged=function(e,r){if(void 0===r&&(r=!1),this.registrationForm){var n=this.registrationForm.form;for(var t in this.formErrors){this.formErrors[t]=[];var o=n.get(t);if(o&&(o.dirty||r)&&!o.valid){var i=this.validationMessages[t];for(var s in o.errors)this.formErrors[t].push(i[s])}}}},__decorate([t.ViewChild("registrationForm"),__metadata("design:type","function"==typeof(e="undefined"!=typeof i.NgForm&&i.NgForm)&&e||Object)],Register.prototype,"currentForm",void 0),Register=__decorate([t.Component({selector:"register",styles:[n(762)],template:n(772),encapsulation:t.ViewEncapsulation.None,host:{"class":"register-page app"},providers:[s.AuthService]}),__metadata("design:paramtypes",["function"==typeof(r="undefined"!=typeof s.AuthService&&s.AuthService)&&r||Object,"function"==typeof(a="undefined"!=typeof o.Router&&o.Router)&&a||Object])],Register);var e,r,a}();r.Register=a},762:function(e,r){e.exports="/***********************************/\n/**          REGISTER             **/\n/***********************************/\n.register-page {\n  background-color: #ddd; }\n\n.register-page .page-footer {\n  margin-bottom: 25px;\n  font-size: 13px;\n  color: #818a91;\n  text-align: center; }\n  @media (min-height: 600px) {\n    .register-page .page-footer {\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      right: 0; } }\n\n.widget-register-container {\n  padding-top: 10%; }\n\n.widget-register-logo {\n  margin-top: 15px;\n  margin-bottom: 15px;\n  text-align: center;\n  font-weight: 400; }\n  .widget-register-logo .fa-circle {\n    font-size: 13px;\n    margin: 0 20px; }\n\n.widget-register {\n  padding: 30px; }\n  .widget-register > header h1, .widget-register > header h2, .widget-register > header h3, .widget-register > header h4, .widget-register > header h5, .widget-register > header h6 {\n    font-weight: 400;\n    text-align: center; }\n\n.widget-register-info {\n  font-size: 13px;\n  color: #888;\n  margin-top: 1px;\n  margin-bottom: 0;\n  text-align: center; }\n  .widget-register-info.abc-checkbox {\n    margin-left: -25px; }\n\n.register-form .form-control {\n  font-size: 13px;\n  background-color: #eceeef; }\n  .register-form .form-control:focus {\n    background-color: #ddd; }\n"},772:function(e,r){e.exports='<div class="container">\n    <main id="content" class="widget-register-container" role="main">\n        <div class="row">\n            <div class="col-xl-4 col-md-6 col-xs-10 offset-xl-4 offset-md-3 offset-xs-1">\n                <h5 class="widget-register-logo animated fadeInUp">\n                    <i class="fa fa-circle text-gray"></i>\n                    Task Force Cloud\n                    <i class="fa fa-circle text-warning"></i>\n                </h5>\n                <section class="widget widget-register animated fadeInUp">\n                    <header>\n                        <h3>Register with Task Force Cloud</h3>\n                    </header>\n                    <div class="widget-body">\n                        <p class="widget-register-info">\n                            Use Facebook, Twitter or your email to sign in.\n                        </p>\n                        <p class="widget-register-info">\n                            Don\'t have an account? Sign up now!\n                        </p>\n                        <form class="register-form mt-lg" role="form" #registrationForm="ngForm" novalidate>\n                            <div class="form-group">\n                                <input type="email" class="form-control" name="username" placeholder="Username"\n                                       [(ngModel)]="user.username" required>\n                                <ul class="validation-errors-list filled" *ngFor="let err of formErrors.username">\n                                    <li class="validation-type">{{ err }}</li>\n                                </ul>\n                            </div>\n                            <div class="form-group">\n                                <input class="form-control" type="password" name="password" placeholder="Password"\n                                       [(ngModel)]="user.password" required>\n                                <ul class="validation-errors-list filled" *ngFor="let err of formErrors.password">\n                                    <li class="validation-type">{{ err }}</li>\n                                </ul>\n                            </div>\n                            <div class="form-group">\n                                <input class="form-control" type="password" name="confirmPassword"\n                                       placeholder="Confirm Password" [(ngModel)]="user.confirmPassword" required>\n                                <ul class="validation-errors-list filled" *ngFor="let err of formErrors.confirmPassword">\n                                    <li class="validation-type">{{ err }}</li>\n                                </ul>\n                            </div>\n                            <div class="clearfix">\n                                <div class="btn-toolbar pull-xs-right m-t-1">\n                                    <button class="btn btn-secondary btn-sm" [routerLink]="[\'/login\']">Back to Login\n                                    </button>\n                                    <button type="submit" class="btn btn-inverse btn-sm"\n                                            (click)="register(registrationForm.valid, registrationForm.value)">Create Account\n                                    </button>\n                                </div>\n                            </div>\n                            <div class="row m-t-1">\n                                <div class="col-md-6 push-md-6">\n                                    <div class="clearfix">\n                                        <div class="abc-checkbox widget-register-info pull-xs-right">\n                                            <input type="checkbox" id="isKeepLoggedIn" name="isKeepLoggedIn"\n                                                   [(ngModel)]="user.isKeepLoggedIn">\n                                            <label for="isKeepLoggedIn">Keep me signed in </label>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class="col-md-6 pull-md-6">\n                                    <a class="mr-n-lg" href="#">Trouble with account?</a>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </section>\n            </div>\n        </div>\n    </main>\n    <footer class="page-footer">\n        2016 &copy; Task Force Cloud\n    </footer>\n</div>\n'}});